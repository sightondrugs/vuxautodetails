import React, { useMemo, useState, useEffect } from "react";

// Single-file React site for a detailing business with two packages (Basic & Ultimate)
// Adds a Gallery where you can upload your designs/photos (saved to localStorage)
// Tailwind for styling, shadcn-like vibe via utility classes only

const PACKAGES = {
  basic: {
    id: "basic",
    name: "Basic Detail",
    price: 45,
    durationMins: 60,
    features: [
      "Exterior wash & dry",
      "Tire shine",
      "Interior vacuum",
      "Windows inside & out",
    ],
  },
  ultimate: {
    id: "ultimate",
    name: "Ultimate Detail",
    price: 60,
    durationMins: 120,
    features: [
      "Foam cannon hand wash",
      "Spray sealant",
      "Interior deep clean",
      "Trim & tire dressing + windows",
    ],
  },
};

const defaultForm = {
  name: "",
  email: "",
  phone: "",
  vehicle: "",
  packageId: "ultimate",
  date: "",
  time: "",
  notes: "",
};

function loadBookings() {
  try {
    const raw = localStorage.getItem("detailing_bookings_v1");
    return raw ? JSON.parse(raw) : [];
  } catch (e) {
    return [];
  }
}
function saveBookings(list) {
  localStorage.setItem("detailing_bookings_v1", JSON.stringify(list));
}

// Gallery persistence
function loadGallery() {
  try {
    const raw = localStorage.getItem("detailing_gallery_v1");
    return raw ? JSON.parse(raw) : [];
  } catch (e) {
    return [];
  }
}
function saveGallery(items) {
  localStorage.setItem("detailing_gallery_v1", JSON.stringify(items));
}

function classNames(...arr) {
  return arr.filter(Boolean).join(" ");
}

export default function App() {
  const [form, setForm] = useState(defaultForm);
  const [bookings, setBookings] = useState([]);
  const [confirmId, setConfirmId] = useState(null);
  const [errors, setErrors] = useState({});
  const [showAdmin, setShowAdmin] = useState(false);
  const [gallery, setGallery] = useState([]);

  useEffect(() => {
    setBookings(loadBookings());
    setGallery(loadGallery());
  }, []);

  const selectedPackage = useMemo(() => PACKAGES[form.packageId], [form.packageId]);
  const totalPrice = useMemo(() => selectedPackage.price, [selectedPackage]);

  function onChange(e) {
    const { name, value } = e.target;
    setForm((f) => ({ ...f, [name]: value }));
  }

  function validate() {
    const errs = {};
    if (!form.name.trim()) errs.name = "Please enter your name";
    if (!/^([^\s@]+)@([^\s@]+)\.[^\s@]+$/.test(form.email)) errs.email = "Enter a valid email";
    if (!/^[0-9+()\-\s]{7,}$/.test(form.phone)) errs.phone = "Enter a valid phone";
    if (!form.vehicle.trim()) errs.vehicle = "Tell us your vehicle";
    if (!form.date) errs.date = "Choose a date";
    if (!form.time) errs.time = "Choose a time";

    // Prevent exact duplicate slot
    const slotKey = `${form.date} ${form.time}`;
    const clash = bookings.find((b) => `${b.date} ${b.time}` === slotKey);
    if (clash) errs.time = "That slot is already booked. Pick another.";

    setErrors(errs);
    return Object.keys(errs).length === 0;
  }

  function reset() {
    setForm(defaultForm);
    setErrors({});
  }

  function submit(e) {
    e.preventDefault();
    if (!validate()) return;

    const id = crypto.randomUUID();
    const record = { id, ...form, packageName: selectedPackage.name, price: totalPrice, createdAt: new Date().toISOString() };
    const next = [record, ...bookings];
    setBookings(next);
    saveBookings(next);
    setConfirmId(id);
  }

  function cancelBooking(id) {
    const next = bookings.filter((b) => b.id !== id);
    setBookings(next);
    saveBookings(next);
    if (confirmId === id) setConfirmId(null);
  }

  const confirmed = useMemo(() => bookings.find((b) => b.id === confirmId) || null, [bookings, confirmId]);

  return (
    <div className="min-h-screen bg-neutral-50 text-neutral-900">
      {/* Nav */}
      <header className="sticky top-0 z-30 bg-white/80 backdrop-blur border-b border-neutral-200">
        <div className="mx-auto max-w-6xl px-4 py-3 flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="h-9 w-9 rounded-2xl bg-black text-white grid place-items-center font-semibold">DB</div>
            <span className="font-semibold tracking-tight">Detailing by You</span>
          </div>
          <nav className="hidden sm:flex items-center gap-6 text-sm">
            <a href="#packages" className="hover:opacity-80">Packages</a>
            <a href="#book" className="hover:opacity-80">Book</a>
            <a href="#gallery" className="hover:opacity-80">Gallery</a>
            <a href="#faq" className="hover:opacity-80">FAQ</a>
            <button onClick={() => setShowAdmin((s) => !s)} className="rounded-xl border px-3 py-1 text-xs hover:bg-neutral-50">{showAdmin ? "Hide" : "Admin"}</button>
          </nav>
        </div>
      </header>

      {/* Hero */}
      <section className="mx-auto max-w-6xl px-4 pt-12 pb-8">
        <div className="grid lg:grid-cols-2 gap-8 items-center">
          <div>
            <h1 className="text-4xl sm:text-5xl font-extrabold tracking-tight leading-tight">Shine that turns heads. <span className="text-neutral-500">Book in seconds.</span></h1>
            <p className="mt-4 text-neutral-600 max-w-prose">Mobile car detailing that fits your schedule. Choose Basic for a quick refresh, or go Ultimate for a full interior & exterior transformation.</p>
            <div className="mt-6 flex gap-3">
              <a href="#book" className="inline-flex items-center justify-center rounded-2xl bg-black text-white px-5 py-3 text-sm font-semibold shadow hover:translate-y-0.5 transition">Book Now</a>
              <a href="#packages" className="inline-flex items-center justify-center rounded-2xl border border-neutral-300 px-5 py-3 text-sm font-semibold hover:bg-white">See Packages</a>
            </div>
            <div className="mt-6 flex items-center gap-6 text-sm text-neutral-600">
              <div>‚úîÔ∏è Licensed & insured</div>
              <div>‚úîÔ∏è We come to you</div>
              <div>‚úîÔ∏è Card/Apple Pay accepted (on-site)</div>
            </div>
          </div>
          <div className="aspect-video rounded-3xl bg-gradient-to-br from-neutral-200 to-neutral-100 shadow-inner grid place-items-center text-neutral-500 text-sm">
            <div className="p-6 text-center">
              <div className="text-7xl">üöó‚ú®</div>
              <p className="mt-3">Before/After worthy gloss ‚Äî rain or shine.</p>
            </div>
          </div>
        </div>
      </section>

      {/* Packages */}
      <section id="packages" className="mx-auto max-w-6xl px-4 py-8">
        <h2 className="text-2xl font-bold">Packages</h2>
        <p className="text-neutral-600 mt-1">Two simple options. No surprises.</p>
        <div className="mt-6 grid md:grid-cols-2 gap-6">
          {Object.values(PACKAGES).map((pkg) => (
            <div key={pkg.id} className={classNames(
              "rounded-3xl border shadow-sm p-6 bg-white",
              form.packageId === pkg.id && "ring-2 ring-black"
            )}>
              <div className="flex items-baseline justify-between">
                <h3 className="text-xl font-semibold">{pkg.name}</h3>
                <div className="text-2xl font-bold">${pkg.price}</div>
              </div>
              <ul className="mt-4 space-y-2 text-sm text-neutral-700">
                {pkg.features.map((f, i) => (
                  <li key={i} className="flex items-start gap-2"><span>‚úÖ</span><span>{f}</span></li>
                ))}
              </ul>
              <button
                onClick={() => setForm((f) => ({ ...f, packageId: pkg.id }))}
                className={classNames(
                  "mt-5 w-full rounded-xl px-4 py-2 text-sm font-semibold",
                  form.packageId === pkg.id ? "bg-black text-white" : "border"
                )}
              >
                {form.packageId === pkg.id ? "Selected" : "Choose " + pkg.name}
              </button>
            </div>
          ))}
        </div>
      </section>

      {/* Booking Form */}
      <section id="book" className="mx-auto max-w-6xl px-4 py-10">
        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2">
            <div className="rounded-3xl border bg-white shadow-sm p-6">
              <h2 className="text-2xl font-bold">Book your appointment</h2>
              <p className="text-neutral-600 mt-1">Pick a date and time. We'll confirm by email and text.</p>

              <form onSubmit={submit} className="mt-6 grid sm:grid-cols-2 gap-4">
                <div className="sm:col-span-2">
                  <label className="block text-sm font-medium">Package</label>
                  <div className="mt-2 flex gap-3">
                    {Object.values(PACKAGES).map((pkg) => (
                      <label key={pkg.id} className={classNames(
                        "flex-1 rounded-2xl border px-4 py-3 cursor-pointer",
                        form.packageId === pkg.id ? "border-black bg-neutral-50" : "hover:bg-neutral-50"
                      )}>
                        <input
                          type="radio"
                          name="packageId"
                          value={pkg.id}
                          checked={form.packageId === pkg.id}
                          onChange={onChange}
                          className="hidden"
                        />
                        <div className="flex items-center justify-between">
                          <div>
                            <div className="font-semibold">{pkg.name}</div>
                            <div className="text-xs text-neutral-600">~{Math.round(pkg.durationMins/60*10)/10} hrs</div>
                          </div>
                          <div className="font-semibold">${pkg.price}</div>
                        </div>
                      </label>
                    ))}
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium">Full name</label>
                  <input name="name" value={form.name} onChange={onChange} placeholder="e.g., Alex Rivera" className={inputClass(errors.name)} />
                  {errors.name && <p className="mt-1 text-xs text-red-600">{errors.name}</p>}
                </div>
                <div>
                  <label className="block text-sm font-medium">Phone</label>
                  <input name="phone" value={form.phone} onChange={onChange} placeholder="(555) 555-5555" className={inputClass(errors.phone)} />
                  {errors.phone && <p className="mt-1 text-xs text-red-600">{errors.phone}</p>}
                </div>
                <div>
                  <label className="block text-sm font-medium">Email</label>
                  <input name="email" value={form.email} onChange={onChange} placeholder="you@example.com" className={inputClass(errors.email)} />
                  {errors.email && <p className="mt-1 text-xs text-red-600">{errors.email}</p>}
                </div>
                <div>
                  <label className="block text-sm font-medium">Vehicle</label>
                  <input name="vehicle" value={form.vehicle} onChange={onChange} placeholder="Year Make Model (e.g., 2020 Honda Civic)" className={inputClass(errors.vehicle)} />
                  {errors.vehicle && <p className="mt-1 text-xs text-red-600">{errors.vehicle}</p>}
                </div>

                <div>
                  <label className="block text-sm font-medium">Date</label>
                  <input type="date" name="date" value={form.date} onChange={onChange} className={inputClass(errors.date)} />
                  {errors.date && <p className="mt-1 text-xs text-red-600">{errors.date}</p>}
                </div>
                <div>
                  <label className="block text-sm font-medium">Time</label>
                  <input type="time" name="time" value={form.time} onChange={onChange} className={inputClass(errors.time)} />
                  {errors.time && <p className="mt-1 text-xs text-red-600">{errors.time}</p>}
                </div>

                <div className="sm:col-span-2">
                  <label className="block text-sm font-medium">Notes (optional)</label>
                  <textarea name="notes" value={form.notes} onChange={onChange} placeholder="Anything we should know? (pet hair, stains, location access, etc.)" className={inputClass()} rows={3} />
                </div>

                <div className="sm:col-span-2 flex items-center justify-between pt-2">
                  <div className="text-sm text-neutral-700">Total due on-site: <span className="font-semibold">${totalPrice}</span></div>
                  <button type="submit" className="rounded-2xl bg-black text-white px-5 py-3 text-sm font-semibold shadow hover:translate-y-0.5 transition">Request Appointment</button>
                </div>
              </form>
            </div>
          </div>

          {/* Right rail: Summary & confirmation */}
          <aside className="lg:col-span-1">
            <div className="rounded-3xl border bg-white shadow-sm p-6 sticky top-20">
              <h3 className="font-semibold text-lg">Your selection</h3>
              <div className="mt-4 flex items-start justify-between">
                <div>
                  <div className="font-semibold">{selectedPackage.name}</div>
                  <ul className="text-sm text-neutral-600 mt-1 space-y-1">
                    {selectedPackage.features.map((f, i) => (
                      <li key={i} className="flex gap-2"><span>‚Ä¢</span><span>{f}</span></li>
                    ))}
                  </ul>
                </div>
                <div className="text-right">
                  <div className="text-xl font-bold">${selectedPackage.price}</div>
                  <div className="text-xs text-neutral-500">~{Math.round(selectedPackage.durationMins/60*10)/10} hrs</div>
                </div>
              </div>

              <div className="mt-6 border-t pt-4 text-sm">
                <div className="flex items-center justify-between"><span>Date</span><span className="font-medium">{form.date || "‚Äî"}</span></div>
                <div className="flex items-center justify-between mt-2"><span>Time</span><span className="font-medium">{form.time || "‚Äî"}</span></div>
                <div className="flex items-center justify-between mt-2"><span>Vehicle</span><span className="font-medium text-right max-w-[12rem] truncate" title={form.vehicle}>{form.vehicle || "‚Äî"}</span></div>
              </div>

              {confirmed && (
                <div className="mt-6 rounded-2xl bg-green-50 border border-green-200 p-4">
                  <div className="font-semibold">Request sent ‚úÖ</div>
                  <p className="text-sm text-green-900 mt-1">Thanks, {confirmed.name.split(" ")[0]}! You'll get a confirmation by email/text. Your request ID is <span className="font-mono">{confirmed.id.slice(0,8)}</span>.</p>
                  <button onClick={() => { setConfirmId(null); reset(); }} className="mt-3 text-sm underline">Book another</button>
                </div>
              )}
            </div>
          </aside>
        </div>
      </section>

      {/* Admin ‚Äì Gallery & Bookings */}
      {showAdmin && (
        <section className="mx-auto max-w-6xl px-4 pb-12" id="admin">
          <div className="rounded-3xl border bg-white shadow-sm p-6">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold">Admin ‚Äì Designs & Photos</h2>
            </div>
            <GalleryAdmin gallery={gallery} setGallery={setGallery} />
          </div>

          <div className="rounded-3xl border bg-white shadow-sm p-6 mt-8">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold">Admin ‚Äì Upcoming Requests</h2>
              <button onClick={() => { saveBookings([]); setBookings([]); }} className="text-sm rounded-xl border px-3 py-1 hover:bg-neutral-50">Clear All</button>
            </div>
            {bookings.length === 0 ? (
              <p className="text-neutral-600 mt-4">No bookings yet.</p>
            ) : (
              <ul className="mt-4 divide-y">
                {bookings.map((b) => (
                  <li key={b.id} className="py-4 flex items-center justify-between gap-4">
                    <div>
                      <div className="font-semibold">{b.name} ‚Äî <span className="text-neutral-600 font-normal">{b.vehicle}</span></div>
                      <div className="text-sm text-neutral-700">{b.packageName} ‚Ä¢ {b.date} at {b.time} ‚Ä¢ ${b.price}</div>
                      {b.notes && <div className="text-sm text-neutral-600 mt-1">Notes: {b.notes}</div>}
                    </div>
                    <div className="flex items-center gap-2">
                      <button onClick={() => cancelBooking(b.id)} className="text-sm rounded-xl border px-3 py-1 hover:bg-neutral-50">Delete</button>
                    </div>
                  </li>
                ))}
              </ul>
            )}
          </div>
        </section>
      )}

      {/* Gallery (public view) */}
      <section id="gallery" className="mx-auto max-w-6xl px-4 py-10">
        <h2 className="text-2xl font-bold">Gallery</h2>
        <p className="text-neutral-600 mt-1">Your designs, logo mocks, and recent detail shots.</p>
        {gallery.length === 0 ? (
          <p className="mt-6 text-neutral-600">No images yet. Toggle <span className="font-semibold">Admin</span> to add some!</p>
        ) : (
          <div className="mt-6 grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {gallery.map((img) => (
              <figure key={img.id} className="rounded-2xl overflow-hidden border bg-white shadow-sm">
                <img src={img.url} alt={img.title || "design image"} className="w-full h-56 object-cover"/>
                <figcaption className="p-3 text-sm flex items-center justify-between">
                  <div>
                    <div className="font-medium truncate max-w-[16rem]" title={img.title}>{img.title || "Untitled"}</div>
                    {img.credit && <div className="text-neutral-500 text-xs">{img.credit}</div>}
                  </div>
                  <div className="text-neutral-500 text-xs">{new Date(img.addedAt).toLocaleDateString()}</div>
                </figcaption>
              </figure>
            ))}
          </div>
        )}
      </section>

      {/* FAQ */}
      <section id="faq" className="mx-auto max-w-6xl px-4 pb-16">
        <div className="rounded-3xl border bg-white shadow-sm p-6">
          <h2 className="text-2xl font-bold">FAQ</h2>
          <div className="mt-4 grid md:grid-cols-2 gap-6 text-sm">
            <div>
              <div className="font-semibold">Do you travel to me?</div>
              <p className="text-neutral-700 mt-1">Yes! We're a mobile service. Please ensure we have access to your driveway and your keys for interior work.</p>
            </div>
            <div>
              <div className="font-semibold">How do I pay?</div>
              <p className="text-neutral-700 mt-1">Pay on-site after your detail (card, Apple Pay, or cash). No online payment required here.</p>
            </div>
            <div>
              <div className="font-semibold">Cancellation policy</div>
              <p className="text-neutral-700 mt-1">Free to reschedule up to 24 hours before. Same-day cancellations may incur a $20 fee.</p>
            </div>
            <div>
              <div className="font-semibold">Weather issues</div>
              <p className="text-neutral-700 mt-1">If weather gets in the way, we'll reach out to reschedule ‚Äî no fee.</p>
            </div>
          </div>
        </div>
      </section>

      <footer className="border-t bg-white">
        <div className="mx-auto max-w-6xl px-4 py-8 text-sm text-neutral-600 flex flex-col sm:flex-row items-center justify-between gap-2">
          <div>¬© {new Date().getFullYear()} Detailing by You</div>
          <div className="flex items-center gap-4">
            <a href="#book" className="underline">Book now</a>
            <a href="mailto:hello@detailyou.com" className="underline">Contact</a>
            <span className="text-neutral-400">MI ‚Ä¢ Broward ‚Ä¢ Palm Beach</span>
          </div>
        </div>
      </footer>
    </div>
  );
}

function GalleryAdmin({ gallery, setGallery }) {
  const [url, setUrl] = useState("");
  const [title, setTitle] = useState("");
  const [credit, setCredit] = useState("");

  function addFromUrl(e) {
    e.preventDefault();
    if (!url.trim()) return;
    const item = { id: crypto.randomUUID(), url: url.trim(), title: title.trim(), credit: credit.trim(), addedAt: new Date().toISOString() };
    const next = [item, ...gallery];
    setGallery(next);
    saveGallery(next);
    setUrl(""); setTitle(""); setCredit("");
  }

  function onFiles(e) {
    const files = Array.from(e.target.files || []);
    if (files.length === 0) return;
    const readers = files.map((file) => new Promise((res) => {
      const fr = new FileReader();
      fr.onload = () => res({ id: crypto.randomUUID(), url: fr.result, title: file.name, credit: "", addedAt: new Date().toISOString() });
      fr.readAsDataURL(file);
    }));
    Promise.all(readers).then((items) => {
      const next = [...items, ...gallery];
      setGallery(next);
      saveGallery(next);
    });
  }

  function removeImage(id) {
    const next = gallery.filter((g) => g.id !== id);
    setGallery(next);
    saveGallery(next);
  }

  function clearAll() {
    saveGallery([]);
    setGallery([]);
  }

  return (
    <div>
      <div className="grid md:grid-cols-3 gap-3">
        <div className="md:col-span-2">
          <label className="block text-sm font-medium">Add image by URL</label>
          <form onSubmit={addFromUrl} className="mt-2 flex gap-2">
            <input value={url} onChange={(e)=>setUrl(e.target.value)} placeholder="https://...jpg" className={inputClass()} />
            <input value={title} onChange={(e)=>setTitle(e.target.value)} placeholder="Title / caption" className={inputClass()} />
            <input value={credit} onChange={(e)=>setCredit(e.target.value)} placeholder="Credit (optional)" className={inputClass()} />
            <button type="submit" className="rounded-xl bg-black text-white px-4 py-2 text-sm font-semibold">Add</button>
          </form>
        </div>
        <div>
          <label className="block text-sm font-medium">Upload files</label>
          <input type="file" accept="image/*" multiple onChange={onFiles} className="mt-2 block" />
          <button onClick={clearAll} className="mt-2 text-xs rounded-xl border px-3 py-1 hover:bg-neutral-50">Clear All</button>
        </div>
      </div>

      {gallery.length > 0 && (
        <ul className="mt-4 grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {gallery.map((g) => (
            <li key={g.id} className="rounded-2xl overflow-hidden border bg-white shadow-sm">
              <img src={g.url} alt={g.title || "design"} className="w-full h-40 object-cover" />
              <div className="p-3 text-sm flex items-center justify-between">
                <div className="min-w-0">
                  <div className="font-medium truncate" title={g.title}>{g.title || "Untitled"}</div>
                  {g.credit && <div className="text-neutral-500 text-xs">{g.credit}</div>}
                </div>
                <button onClick={() => removeImage(g.id)} className="text-xs rounded-lg border px-2 py-1 hover:bg-neutral-50">Remove</button>
              </div>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}

function inputClass(hasError) {
  return classNames(
    "mt-2 w-full rounded-xl border px-3 py-2 text-sm outline-none",
    hasError ? "border-red-500" : "border-neutral-300 focus:border-black"
  );
}
